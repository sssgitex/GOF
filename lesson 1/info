S - принцип единственной ответственнойсти (single responsibility principle)

Для каждого класса должно быть определено единственное назначение 
Все ресурсы, необходимые для реализации, должны быть инкапсулированы в этот класс и подчинены только этой задаче

O - принцип открытости/закрытости (open-closed principle).
"Программные сущности должны быть открыты для расширения, но закрыты для модификации"

L - принцип подстановки "Лисков" (Liskov substitution principle)

"Объекты в программе должны быть заменяемыми на экземпляры их подтипов без изменений правильности выполнения программы"
Родительский и производный классы должны быть взаимозаменяемы.

I - принцип разделения интерфейса (interface segregation principle)
Много интрефейсов, специально предназначенных для клиента, лучше, чем один интерфейс общего назначения"

D - принцип инверсии зависимостей (dependency inversion principle).
Зависимость на Асбтракицях. Нет зависимости на что-то конкретное. 